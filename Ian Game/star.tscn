[gd_scene load_steps=3 format=3 uid="uid://bg4pskll0ck4y"]

[sub_resource type="CanvasTexture" id="CanvasTexture_gmdam"]

[sub_resource type="GDScript" id="GDScript_vmt1m"]
resource_name = "star"
script/source = "extends Sprite2D

@export var speed_scale: float

@export var normal_size: float
@export var big_size: float
@export var normal_color: Color
var big_color: Color
@export var grow_time: float
@export var shrink_time: float
@export var sat: float = 50

signal am_big
signal am_small

var _go_big: bool = false
var _go_small: bool = false


var _size_time: float
var _from_size: float
var _to_size: float
var _from_color: Color
var _to_color: Color

var _drum_note: int
var _hue: float

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	_drum_note = randi_range(2, 7)
	#print(_drum_note,\" \",remap(_drum_note, 2, 7, 0, 1))
	big_color = Color.from_hsv(remap(_drum_note, 2, 7, 0, 1), sat/100, 1)
	#print(big_color)
	modulate = normal_color
	scale.x = normal_size
	scale.y = scale.x
	IanGameManager.drums_note.connect(_on_drum_note)


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	position.x -= IanGameManager.speed * delta * speed_scale
	if _go_big or _go_small:
		scale.x = lerp(_from_size, _to_size, (Time.get_ticks_msec() - _size_time) / (grow_time * 1000))
		scale.y = scale.x
		#modulate = _from_color.lerp(_to_color, (Time.get_ticks_msec() - _size_time) / (grow_time * 1000))
		if _go_big and Time.get_ticks_msec() - _size_time >= grow_time * 1000:
			_size_time = Time.get_ticks_msec()
			_from_size = big_size
			_to_size = normal_size
			_from_color = big_color
			_to_color = normal_color
			_go_big = false
			_go_small = true
		elif _go_small and Time.get_ticks_msec() - _size_time >= grow_time * 1000:
			_go_small = false
			modulate = Color.WHITE
			scale.x = normal_size
			scale.y = scale.x
			_from_color = modulate


func _on_drum_note(note: int) -> void:
	if note != _drum_note or _go_big or _go_small:
		return
	_from_size = scale.x
	_from_color = modulate
	_to_size = big_size
	_to_color = big_color
	_size_time = Time.get_ticks_msec()
	_go_big = true
	modulate = big_color
"

[node name="Star" type="Sprite2D"]
light_mask = 2
z_index = -9
position = Vector2(2.25, 2.25)
scale = Vector2(20, 20)
texture = SubResource("CanvasTexture_gmdam")
script = SubResource("GDScript_vmt1m")
speed_scale = 0.2
normal_size = 10.0
big_size = 20.0
normal_color = Color(1, 1, 1, 1)
grow_time = 0.05
shrink_time = 0.2
sat = 100.0
